basePath: /svs/v1
definitions:
  QVLQuoteData:
    properties:
      quote:
        type: string
        x-go-name: QuoteBlob
      userData:
        type: string
        x-go-name: UserData
    type: object
    x-go-package: intel/isecl/sqvs/v3/resource
  QuoteData:
    properties:
      quote:
        type: string
        x-go-name: QuoteBlob
    type: object
    x-go-package: intel/isecl/sqvs/v3/resource
  SGXQVLResponse:
    properties:
      ConfigId:
        type: string
      ConfigSvn:
        type: string
      EnclaveIssuer:
        type: string
      EnclaveIssuerExtProdID:
        type: string
      EnclaveIssuerProdID:
        type: string
      EnclaveMeasurement:
        type: string
      IsvSvn:
        type: string
      Message:
        type: string
      TcbLevel:
        type: string
      reportData:
        type: string
        x-go-name: ReportData
      userDataMatch:
        type: string
        x-go-name: UserDataHashMatch
    type: object
    x-go-package: intel/isecl/sqvs/v3/resource
  SGXResponse:
    properties:
      ChallengeKeyType:
        type: string
      ChallengeRsaPublicKey:
        type: string
      ConfigId:
        type: string
      ConfigSvn:
        type: string
      EnclaveIssuer:
        type: string
      EnclaveIssuerExtProdID:
        type: string
      EnclaveIssuerProdID:
        type: string
      EnclaveMeasurement:
        type: string
      IsvSvn:
        type: string
      Message:
        type: string
      Status:
        type: string
      TcbLevel:
        type: string
    type: object
    x-go-package: intel/isecl/sqvs/v3/resource
host: svs.com:12000
info:
  description: |-
    SGX Quote Verification service (SQVS) resource is used to verify the sgx ecdsa quote or extended quote provided by the Quote verifier.
    SQVS checks whether the quote signature and PCK Certificate are valid, checks other parameters in the quote and returns the verification result.
    SQVS contacts SGX Caching service (SCS) to make sure that PCKCRL, TCBInfo, and QEIdentity in the quote are correct.
    SQVS listening port is user-configurable.
  license:
    name: 'Copyright (C) 2020 Intel Corporation. SPDX-License-Identifier: BSD-3-Clause'
  title: SGX Quote Verification Service
  version: "1.0"
paths:
  /sgx_qv_verify_quote:
    post:
      consumes:
      - application/json
      description: |
        Verifies the SGX ECDSA quote provided in the request body.
        Quote verifier requests SGX Quote Verification Service (SQVS) to verify quote.
        SQVS parses the quote, verifies all the parameters in the quote and returns the response.
      operationId: sgx_qv_verify_quote
      parameters:
      - in: body
        name: request body
        required: true
        schema:
          $ref: '#/definitions/QVLQuoteData'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully verified the quote and its parameters.
          schema:
            $ref: '#/definitions/SGXQVLResponse'
      security:
      - bearerAuth: []
      tags:
      - Quote
      x-sample-call-endpoint: https://svs.com:12000/svs/v1/sgx_qv_verify_quote
      x-sample-call-input: |
        {
          "quote":"AwACAAAAAAAFAAoAk5pyM/ecTKmUCg2zlX8GBykaeX/IbYBtMzyC5lkpA0IAAAAAAgIAAQEAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAAAADnAAAAAAAAAJJwRC0b0ZYfo52+HyzfT4eVClT8r5ouUBOHXDNGV
          C3KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADUEqTwfvg4kqWRX7KrWEvjHhhuWk+Vq19pUP1OuGlNewAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1BAAAI2X3
          h5lqazTamLWIQP8xEPDAwVi+oQDogM3xLv4bMtf4mZm7KkIHHI1x693ILPWxrIpaRiEggRGdheZ5NCdEwLyPIzUpScz6bN8oQo2
          xaa8p/W1lIJhG7Yxd3c71Plz6kpi+bkaAo/ZbnDnh5PncIu8H00SCxdcZDOYAU/ualbsAgIAAQEAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQAAAAAAAADnAAAAAAAAAGDYWvKL6NHECgjZiwCdX4rME4Sjhc9GCADkeHkdGpecAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMT1d115ZQPpYTf3fGioKaAFasje1wFAsIGwlEkMV7/wAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAEABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          ceWekTM/vT9LqUAxTrRfBT6Eav49bou/MlhGY0GA4wwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYcmJZoOnc26Fwd
          1goMVtx/40ZS+7077Zqdo1gcZfG2okXCrtC1vKkiR4bz6bmPe8r8OsBBpHfV83nandZ2kKRSAAAAECAwQFBgcICQoLDA0ODxARE
          hMUFRYXGBkaGxwdHh8FAGwOAAAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRTlEQ0NCSnFnQXdJQkFnSVVPeEl5dnQ5
          cm5ybVhZWktQQjhmRzFEVFNpTDh3Q2dZSUtvWkl6ajBFQXdJd2NERWlNQ0FHQTFVRQpBd3daU1c1MFpXd2dVMGRZSUZCRFN5QlF
          iR0YwWm05eWJTQkRRVEVhTUJnR0ExVUVDZ3dSU1c1MFpXd2dRMjl5Y0c5eVlYUnBiMjR4CkZEQVNCZ05WQkFjTUMxTmhiblJoSU
          VOc1lYSmhNUXN3Q1FZRFZRUUlEQUpEUVRFTE1Ba0dBMVVFQmhNQ1ZWTXdIaGNOTWpBeE1qRTEKTVRRMU1UUXhXaGNOTWpjeE1qR
          TFNVFExTVRReFdqQndNU0l3SUFZRFZRUUREQmxKYm5SbGJDQlRSMWdnVUVOTElFTmxjblJwWm1sagpZWFJsTVJvd0dBWURWUVFL
          REJGSmJuUmxiQ0JEYjNKd2IzSmhkR2x2YmpFVU1CSUdBMVVFQnd3TFUyRnVkR0VnUTJ4aGNtRXhDekFKCkJnTlZCQWdNQWtOQk1
          Rc3dDUVlEVlFRR0V3SlZVekJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCSDV5b1RTalhuS3AKMFd3Y1orYndTV0
          9rV1VLMmRzbnIyb1pXV0I2S3oxRlBEdVk2ekFFenNEUGl2RWlqWWRxRGJPbGw2T1BUc28rMmYwVVlJNlJvL29TagpnZ01RTUlJR
          EREQWZCZ05WSFNNRUdEQVdnQlJaSTlPblNxaGpWQzQ1Y0szZ0R3Y3JWeVFxdHpCdkJnTlZIUjhFYURCbU1HU2dZcUJnCmhsNW9k
          SFJ3Y3pvdkwzTmllQzVoY0drdWRISjFjM1JsWkhObGNuWnBZMlZ6TG1sdWRHVnNMbU52YlM5elozZ3ZZMlZ5ZEdsbWFXTmgKZEd
          sdmJpOTJNeTl3WTJ0amNtdy9ZMkU5Y0d4aGRHWnZjbTBtWlc1amIyUnBibWM5WkdWeU1CMEdBMVVkRGdRV0JCVGY1Z1JSWlkvVA
          pSTXAxb0hKVmFQMEFvTWc2K2pBT0JnTlZIUThCQWY4RUJBTUNCc0F3REFZRFZSMFRBUUgvQkFJd0FEQ0NBamtHQ1NxR1NJYjRUU
          UVOCkFRU0NBaW93Z2dJbU1CNEdDaXFHU0liNFRRRU5BUUVFRUQ1RkZvQlhLSCtaN0hFQlRmcGsxK1F3Z2dGakJnb3Foa2lHK0Uw
          QkRRRUMKTUlJQlV6QVFCZ3NxaGtpRytFMEJEUUVDQVFJQkFqQVFCZ3NxaGtpRytFMEJEUUVDQWdJQkFqQVFCZ3NxaGtpRytFMEJ
          EUUVDQXdJQgpBREFRQmdzcWhraUcrRTBCRFFFQ0JBSUJBREFRQmdzcWhraUcrRTBCRFFFQ0JRSUJBREFRQmdzcWhraUcrRTBCRF
          FFQ0JnSUJBREFRCkJnc3Foa2lHK0UwQkRRRUNCd0lCQURBUUJnc3Foa2lHK0UwQkRRRUNDQUlCQURBUUJnc3Foa2lHK0UwQkRRR
          UNDUUlCQURBUUJnc3EKaGtpRytFMEJEUUVDQ2dJQkFEQVFCZ3NxaGtpRytFMEJEUUVDQ3dJQkFEQVFCZ3NxaGtpRytFMEJEUUVD
          REFJQkFEQVFCZ3NxaGtpRworRTBCRFFFQ0RRSUJBREFRQmdzcWhraUcrRTBCRFFFQ0RnSUJBREFRQmdzcWhraUcrRTBCRFFFQ0R
          3SUJBREFRQmdzcWhraUcrRTBCCkRRRUNFQUlCQURBUUJnc3Foa2lHK0UwQkRRRUNFUUlCQ2pBZkJnc3Foa2lHK0UwQkRRRUNFZ1
          FRQWdJQUFBQUFBQUFBQUFBQUFBQUEKQURBUUJnb3Foa2lHK0UwQkRRRURCQUlBQURBVUJnb3Foa2lHK0UwQkRRRUVCQVlnWUdvQ
          UFBQXdEd1lLS29aSWh2aE5BUTBCQlFvQgpBVEFlQmdvcWhraUcrRTBCRFFFR0JCQlFsT3d5R3BWS0dqYVVMelFCM3N0UU1FUUdD
          aXFHU0liNFRRRU5BUWN3TmpBUUJnc3Foa2lHCitFMEJEUUVIQVFFQi96QVFCZ3NxaGtpRytFMEJEUUVIQWdFQkFEQVFCZ3NxaGt
          pRytFMEJEUUVIQXdFQi96QUtCZ2dxaGtqT1BRUUQKQWdOSUFEQkZBaUVBcEtJMDBYZG5GaU1jMkh6ZVpNT1FLQTFraHlBZTFKZH
          hHWCtyRTBlUEVvSUNJR3lDcE1TM1ZmTjJTVWlPTjJIRwo3MndDU2o4WmNqZk93aTd1OHBRVWVadjkKLS0tLS1FTkQgQ0VSVElGS
          UNBVEUtLS0tLS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDbWpDQ0FrQ2dBd0lCQWdJVVdTUFRwMHFvWTFRdU9YQ3Q0
          QThISzFja0tyY3dDZ1lJS29aSXpqMEVBd0l3CmFERWFNQmdHQTFVRUF3d1JTVzUwWld3Z1UwZFlJRkp2YjNRZ1EwRXhHakFZQmd
          OVkJBb01FVWx1ZEdWc0lFTnYKY25CdmNtRjBhVzl1TVJRd0VnWURWUVFIREF0VFlXNTBZU0JEYkdGeVlURUxNQWtHQTFVRUNBd0
          NRMEV4Q3pBSgpCZ05WQkFZVEFsVlRNQjRYRFRFNU1UQXpNVEV5TXpNME4xb1hEVE0wTVRBek1URXlNek0wTjFvd2NERWlNQ0FHC
          kExVUVBd3daU1c1MFpXd2dVMGRZSUZCRFN5QlFiR0YwWm05eWJTQkRRVEVhTUJnR0ExVUVDZ3dSU1c1MFpXd2cKUTI5eWNHOXlZ
          WFJwYjI0eEZEQVNCZ05WQkFjTUMxTmhiblJoSUVOc1lYSmhNUXN3Q1FZRFZRUUlEQUpEUVRFTApNQWtHQTFVRUJoTUNWVk13V1R
          BVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVF3cCtMYytUVUJ0ZzFICitVOEpJc01zYmpIakNrVHRYYjhqUE02cjJkaH
          U5eklibGhEWjdJTmZxdDNJeDhYY0ZLRDhrME5FWHJrWjY2cUoKWGExS3pMSUtvNEcvTUlHOE1COEdBMVVkSXdRWU1CYUFGT25vU
          kZKVE5seExHSm9SL0VNWUxLWGNJSUJJTUZZRwpBMVVkSHdSUE1FMHdTNkJKb0VlR1JXaDBkSEJ6T2k4dmMySjRMV05sY25ScFpt
          bGpZWFJsY3k1MGNuVnpkR1ZrCmMyVnlkbWxqWlhNdWFXNTBaV3d1WTI5dEwwbHVkR1ZzVTBkWVVtOXZkRU5CTG1SbGNqQWRCZ05
          WSFE0RUZnUVUKV1NQVHAwcW9ZMVF1T1hDdDRBOEhLMWNrS3Jjd0RnWURWUjBQQVFIL0JBUURBZ0VHTUJJR0ExVWRFd0VCL3dRSQ
          pNQVlCQWY4Q0FRQXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSjFxK0ZUeitnVXVWZkJRdUNnSnNGckwyVFRTCmUxYUJaNTNPN
          TJUakZpZTZBaUFyaVBhUmFoVVg5T2E5a0dMbEFjaFdYS1Q2ajRSV1NSNTBCcWhyTjNVVDRBPT0KLS0tLS1FTkQgQ0VSVElGSUNB
          VEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQ2xEQ0NBam1nQXdJQkFnSVZBT25vUkZKVE5seExHSm9SL0V
          NWUxLWGNJSUJJTUFvR0NDcUdTTTQ5QkFNQwpNR2d4R2pBWUJnTlZCQU1NRVVsdWRHVnNJRk5IV0NCU2IyOTBJRU5CTVJvd0dBWU
          RWUVFLREJGSmJuUmxiQ0JECmIzSndiM0poZEdsdmJqRVVNQklHQTFVRUJ3d0xVMkZ1ZEdFZ1EyeGhjbUV4Q3pBSkJnTlZCQWdNQ
          WtOQk1Rc3cKQ1FZRFZRUUdFd0pWVXpBZUZ3MHhPVEV3TXpFd09UUTVNakZhRncwME9URXlNekV5TXpVNU5UbGFNR2d4R2pBWQpC
          Z05WQkFNTUVVbHVkR1ZzSUZOSFdDQlNiMjkwSUVOQk1Sb3dHQVlEVlFRS0RCRkpiblJsYkNCRGIzSndiM0poCmRHbHZiakVVTUJ
          JR0ExVUVCd3dMVTJGdWRHRWdRMnhoY21FeEN6QUpCZ05WQkFnTUFrTkJNUXN3Q1FZRFZRUUcKRXdKVlV6QlpNQk1HQnlxR1NNND
          lBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJFLzZELzFXSE5yV3dQbU5NSXlCS01XNQpKNkp6TXNqbzZ4UDJ2a0sxY2RaR2IxUEdSUC9DL
          zhFQ2dpRGtta2xtendMekxpKzAwMG03TExydEtKQTNvQzJqCmdiOHdnYnd3SHdZRFZSMGpCQmd3Rm9BVTZlaEVVbE0yWEVzWW1o
          SDhReGdzcGR3Z2dFZ3dWZ1lEVlIwZkJFOHcKVFRCTG9FbWdSNFpGYUhSMGNITTZMeTl6WW5ndFkyVnlkR2xtYVdOaGRHVnpMblJ
          5ZFhOMFpXUnpaWEoyYVdObApjeTVwYm5SbGJDNWpiMjB2U1c1MFpXeFRSMWhTYjI5MFEwRXVaR1Z5TUIwR0ExVWREZ1FXQkJUcD
          ZFUlNVelpjClN4aWFFZnhER0N5bDNDQ0FTREFPQmdOVkhROEJBZjhFQkFNQ0FRWXdFZ1lEVlIwVEFRSC9CQWd3QmdFQi93SUIKQ
          VRBS0JnZ3Foa2pPUFFRREFnTkpBREJHQWlFQXp3OXpkVWlVSFBNVWQwQzRteDQxamxGWmtyTTN5NWYxbGduVgpPN0Ziak9vQ0lR
          Q29HdFVtVDRjWHQ3Vit5U0hiSjhIb2I5QWFucHZYTkgxRVIrL2daRitvcFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
        }
      x-sample-call-output: |-
        {
          "Message": "SGX_QL_QV_RESULT_OK",
          "reportData": "0000000000000000000000000000000000000000000000000000000000000000",
          "EnclaveIssuer": "d412a4f07ef83892a5915fb2ab584be31e186e5a4f95ab5f6950fd4eb8694d7b",
          "EnclaveMeasurement": "9270442d1bd1961fa39dbe1f2cdf4f87950a54fcaf9a2e5013875c3346542dca",
          "EnclaveIssuerProdID": "00",
          "EnclaveIssuerExtProdID": "00000000000000000000000000000000",
          "ConfigSvn": "00",
          "IsvSvn": "01",
          "ConfigId": "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
          "TcbLevel": "OutofDate"
        }
  /verifyQuote:
    post:
      consumes:
      - application/json
      description: |
        Verifies the extended quote provided in the request body by checking whether the quote is ECDSA or software quote (for testing purpose) and
        performs the set of validation steps if the quote is ECDSA.
        Quote verifier requests SGX Quote Verification Service (SQVS) to verify a extended quote.
        SQVS parses the extended quote, verifies all the parameters in the quote and returns the response.
        Extended Quote consists of the a quote header, sgx ecdsa quote, public key of the enclave
        and PCK Certificate chain for the current TCB level of the platform
      operationId: quoteVerify
      parameters:
      - in: body
        name: request body
        required: true
        schema:
          $ref: '#/definitions/QuoteData'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully verified the quote and its parameters.
          schema:
            $ref: '#/definitions/SGXResponse'
      security:
      - bearerAuth: []
      tags:
      - Quote
      x-sample-call-endpoint: https://svs.com:12000/svs/v1/verifyQuote
      x-sample-call-input: |
        {
          "quote":"AQAAAAAAAACLEwAAAQAAAAEAAAADAAAAAAEAAOwGAAAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRTlEQ
          0NCSnFnQXdJQkFnSVVMMnV3N0VOc3FSTnFGL1dsRFFGcVc4WVFUN1F3Q2dZSUtvWkl6ajBFQXdJd2NERWlNQ0FHQTFVRQpBd3d
          aU1c1MFpXd2dVMGRZSUZCRFN5QlFiR0YwWm05eWJTQkRRVEVhTUJnR0ExVUVDZ3dSU1c1MFpXd2dRMjl5Y0c5eVlYUnBiMjR4C
          kZEQVNCZ05WQkFjTUMxTmhiblJoSUVOc1lYSmhNUXN3Q1FZRFZRUUlEQUpEUVRFTE1Ba0dBMVVFQmhNQ1ZWTXdIaGNOTWpBeE1
          URXoKTURFME1UQXlXaGNOTWpjeE1URXpNREUwTVRBeVdqQndNU0l3SUFZRFZRUUREQmxKYm5SbGJDQlRSMWdnVUVOTElFTmxjb
          lJwWm1sagpZWFJsTVJvd0dBWURWUVFLREJGSmJuUmxiQ0JEYjNKd2IzSmhkR2x2YmpFVU1CSUdBMVVFQnd3TFUyRnVkR0VnUTJ
          4aGNtRXhDekFKCkJnTlZCQWdNQWtOQk1Rc3dDUVlEVlFRR0V3SlZVekJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwS
          UFCQkpZMytWbVBCNG0KN0lRWEhiTTA3Wlp4WXBvbTJUTnNWSnpZd2UrVytzWWtXV1FncFlrQ0hQd2RNa2ZBU05JM2pld01pOWM1
          SDFlODV2RCtMSEYwalAragpnZ01RTUlJREREQWZCZ05WSFNNRUdEQVdnQlJaSTlPblNxaGpWQzQ1Y0szZ0R3Y3JWeVFxdHpCdkJ
          nTlZIUjhFYURCbU1HU2dZcUJnCmhsNW9kSFJ3Y3pvdkwzTmllQzVoY0drdWRISjFjM1JsWkhObGNuWnBZMlZ6TG1sdWRHVnNMb
          U52YlM5elozZ3ZZMlZ5ZEdsbWFXTmgKZEdsdmJpOTJNeTl3WTJ0amNtdy9ZMkU5Y0d4aGRHWnZjbTBtWlc1amIyUnBibWM5WkdW
          eU1CMEdBMVVkRGdRV0JCUkxTMWE5QWhCMwptYjhDUjJZVkpwa3hPZUxxVWpBT0JnTlZIUThCQWY4RUJBTUNCc0F3REFZRFZSMFR
          BUUgvQkFJd0FEQ0NBamtHQ1NxR1NJYjRUUUVOCkFRU0NBaW93Z2dJbU1CNEdDaXFHU0liNFRRRU5BUUVFRVBnYXlXbVNZMFF6V1
          lVZG14Vnc0Und3Z2dGakJnb3Foa2lHK0UwQkRRRUMKTUlJQlV6QVFCZ3NxaGtpRytFMEJEUUVDQVFJQkFqQVFCZ3NxaGtpRytFM
          EJEUUVDQWdJQkFqQVFCZ3NxaGtpRytFMEJEUUVDQXdJQgpBREFRQmdzcWhraUcrRTBCRFFFQ0JBSUJBREFRQmdzcWhraUcrRTBC
          RFFFQ0JRSUJBREFRQmdzcWhraUcrRTBCRFFFQ0JnSUJBREFRCkJnc3Foa2lHK0UwQkRRRUNCd0lCQURBUUJnc3Foa2lHK0UwQkR
          RRUNDQUlCQURBUUJnc3Foa2lHK0UwQkRRRUNDUUlCQURBUUJnc3EKaGtpRytFMEJEUUVDQ2dJQkFEQVFCZ3NxaGtpRytFMEJEUU
          VDQ3dJQkFEQVFCZ3NxaGtpRytFMEJEUUVDREFJQkFEQVFCZ3NxaGtpRworRTBCRFFFQ0RRSUJBREFRQmdzcWhraUcrRTBCRFFFQ
          0RnSUJBREFRQmdzcWhraUcrRTBCRFFFQ0R3SUJBREFRQmdzcWhraUcrRTBCCkRRRUNFQUlCQURBUUJnc3Foa2lHK0UwQkRRRUNF
          UUlCQ2pBZkJnc3Foa2lHK0UwQkRRRUNFZ1FRQWdJQUFBQUFBQUFBQUFBQUFBQUEKQURBUUJnb3Foa2lHK0UwQkRRRURCQUlBQUR
          BVUJnb3Foa2lHK0UwQkRRRUVCQVlRWUdvQUFBQXdEd1lLS29aSWh2aE5BUTBCQlFvQgpBVEFlQmdvcWhraUcrRTBCRFFFR0JCQT
          c5SWlaYWlhbXJSSW5zdWEwcFRqak1FUUdDaXFHU0liNFRRRU5BUWN3TmpBUUJnc3Foa2lHCitFMEJEUUVIQVFFQi96QVFCZ3Nxa
          GtpRytFMEJEUUVIQWdFQkFEQVFCZ3NxaGtpRytFMEJEUUVIQXdFQi96QUtCZ2dxaGtqT1BRUUQKQWdOSUFEQkZBaUVBdXNreWlr
          cFMvT1RHWG5tckJDY25QUXlnWElocWVjbDY4NExWaWJQNEpvZ0NJQ0xhKzZ6Uzg2c1paVFZwTGxtWApIS1ZoTkxTRExLVUwvb3p
          Oa1N3eVZta2YKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQEAAc7FpcesytSmdaNdgy+Gkj+5B/Q0V2vfWXb6viRziyZNRo9KgE
          K9tRwi50f7uOTv5i0xkOV2QoH+iIRtTtKRlFU2Rdh8JJn+B3nvg3vxNdYcCLkT7w8oY0olLq7GfwRtsaP5z9855Q2ucYiXNBCH5
          YfyCjX8xCttY1jt8r8GI5kS4rzGnz78upVoW1doMet2ONLxbsFUB6Zn3VgGrQ5xxgiAAuK9wtvQTfVLCgjioYsp/NEDeSeyojkx
          Kw6/r0+Phlec2BoTnSqYTnfyYL/G1qjSV6ifXsgrchL+oFnkLTeJ3lC8B+QVKrqVboZ+EIPULIbvjmUSe0674fayRnUXYR8DAAI
          AAAAAAAUACgCTmnIz95xMqZQKDbOVfwYHKkxL2d+pXquq/oS/FUYgvwAAAAACAgACAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAHAAAAAAAAAOcAAAAAAAAAffC36BW9S0r0EjkDjQSnQNrM8L60EqIFbI2QC0W2If0AAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM0XHFaUHGzklpC0VfaR2cigTC5D4KTTD3UvpShcfuV/AAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJglV6uZR4
          R63bkOU579zXVg5QpysXJqSzgu8MbRaBuvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADUEAAAJlWoc9gx/u9YZnn06
          FBk5Y9C12bJPrSgZ1D4GUahEAUS2dql45hOxhpRFI3JRY+G6zm7R1qQkICoGNZaDlDOZ/KBkjJ+GTyEo45QiUUHLRHV8hk9ByGr
          LhedkfgFDDeWk0Jd1IQDRVY/PQmApEhIlAuwW4A4pAhuZasAxBVC1/QCAgACAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAVAAAAAAAAAOcAAAAAAAAAYNha8ovo0cQKCNmLAJ1fiswThKOFz0YIAOR4eR0al5wAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAIxPV3XXllA+lhN/d8aKgpoAVqyN7XAUCwgbCUSQxXv/AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AQAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFjXV3GsuftfSi
          E0iCo+i7/kYJc7ozHiv6mzAuciE3RAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADiC3/hSeunDDyw1IOxJy8WD7n0Oa
          mNDOvV0XXeKwrPYKFAP4lYzpp4kSUdJiG0/9CG2GYULCd6lTyyG0U+LQrgIAAAAQIDBAUGBwgJCgsMDQ4PEBESExQVFhcYGRobH
          B0eHwUAbA4AAC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlFOURDQ0JKcWdBd0lCQWdJVUwydXc3RU5zcVJOcUYvV2xE
          UUZxVzhZUVQ3UXdDZ1lJS29aSXpqMEVBd0l3Y0RFaU1DQUdBMVVFCkF3d1pTVzUwWld3Z1UwZFlJRkJEU3lCUWJHRjBabTl5YlN
          CRFFURWFNQmdHQTFVRUNnd1JTVzUwWld3Z1EyOXljRzl5WVhScGIyNHgKRkRBU0JnTlZCQWNNQzFOaGJuUmhJRU5zWVhKaE1Rc3
          dDUVlEVlFRSURBSkRRVEVMTUFrR0ExVUVCaE1DVlZNd0hoY05NakF4TVRFegpNREUwTVRBeVdoY05NamN4TVRFek1ERTBNVEF5V
          2pCd01TSXdJQVlEVlFRRERCbEpiblJsYkNCVFIxZ2dVRU5MSUVObGNuUnBabWxqCllYUmxNUm93R0FZRFZRUUtEQkZKYm5SbGJD
          QkRiM0p3YjNKaGRHbHZiakVVTUJJR0ExVUVCd3dMVTJGdWRHRWdRMnhoY21FeEN6QUoKQmdOVkJBZ01Ba05CTVFzd0NRWURWUVF
          HRXdKVlV6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJCSlkzK1ZtUEI0bQo3SVFYSGJNMDdaWnhZcG9tMlROc1
          ZKell3ZStXK3NZa1dXUWdwWWtDSFB3ZE1rZkFTTkkzamV3TWk5YzVIMWU4NXZEK0xIRjBqUCtqCmdnTVFNSUlERERBZkJnTlZIU
          01FR0RBV2dCUlpJOU9uU3FoalZDNDVjSzNnRHdjclZ5UXF0ekJ2QmdOVkhSOEVhREJtTUdTZ1lxQmcKaGw1b2RIUndjem92TDNO
          aWVDNWhjR2t1ZEhKMWMzUmxaSE5sY25acFkyVnpMbWx1ZEdWc0xtTnZiUzl6WjNndlkyVnlkR2xtYVdOaApkR2x2Ymk5Mk15OXd
          ZMnRqY213L1kyRTljR3hoZEdadmNtMG1aVzVqYjJScGJtYzlaR1Z5TUIwR0ExVWREZ1FXQkJSTFMxYTlBaEIzCm1iOENSMllWSn
          BreE9lTHFVakFPQmdOVkhROEJBZjhFQkFNQ0JzQXdEQVlEVlIwVEFRSC9CQUl3QURDQ0Fqa0dDU3FHU0liNFRRRU4KQVFTQ0Fpb
          3dnZ0ltTUI0R0NpcUdTSWI0VFFFTkFRRUVFUGdheVdtU1kwUXpXWVVkbXhWdzRSd3dnZ0ZqQmdvcWhraUcrRTBCRFFFQwpNSUlC
          VXpBUUJnc3Foa2lHK0UwQkRRRUNBUUlCQWpBUUJnc3Foa2lHK0UwQkRRRUNBZ0lCQWpBUUJnc3Foa2lHK0UwQkRRRUNBd0lCCkF
          EQVFCZ3NxaGtpRytFMEJEUUVDQkFJQkFEQVFCZ3NxaGtpRytFMEJEUUVDQlFJQkFEQVFCZ3NxaGtpRytFMEJEUUVDQmdJQkFEQV
          EKQmdzcWhraUcrRTBCRFFFQ0J3SUJBREFRQmdzcWhraUcrRTBCRFFFQ0NBSUJBREFRQmdzcWhraUcrRTBCRFFFQ0NRSUJBREFRQ
          mdzcQpoa2lHK0UwQkRRRUNDZ0lCQURBUUJnc3Foa2lHK0UwQkRRRUNDd0lCQURBUUJnc3Foa2lHK0UwQkRRRUNEQUlCQURBUUJn
          c3Foa2lHCitFMEJEUUVDRFFJQkFEQVFCZ3NxaGtpRytFMEJEUUVDRGdJQkFEQVFCZ3NxaGtpRytFMEJEUUVDRHdJQkFEQVFCZ3N
          xaGtpRytFMEIKRFFFQ0VBSUJBREFRQmdzcWhraUcrRTBCRFFFQ0VRSUJDakFmQmdzcWhraUcrRTBCRFFFQ0VnUVFBZ0lBQUFBQU
          FBQUFBQUFBQUFBQQpBREFRQmdvcWhraUcrRTBCRFFFREJBSUFBREFVQmdvcWhraUcrRTBCRFFFRUJBWVFZR29BQUFBd0R3WUtLb
          1pJaHZoTkFRMEJCUW9CCkFUQWVCZ29xaGtpRytFMEJEUUVHQkJBNzlJaVphaWFtclJJbnN1YTBwVGpqTUVRR0NpcUdTSWI0VFFF
          TkFRY3dOakFRQmdzcWhraUcKK0UwQkRRRUhBUUVCL3pBUUJnc3Foa2lHK0UwQkRRRUhBZ0VCQURBUUJnc3Foa2lHK0UwQkRRRUh
          Bd0VCL3pBS0JnZ3Foa2pPUFFRRApBZ05JQURCRkFpRUF1c2t5aWtwUy9PVEdYbm1yQkNjblBReWdYSWhxZWNsNjg0TFZpYlA0Sm
          9nQ0lDTGErNnpTODZzWlpUVnBMbG1YCkhLVmhOTFNETEtVTC9vek5rU3d5Vm1rZgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tL
          S0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNtakNDQWtDZ0F3SUJBZ0lVV1NQVHAwcW9ZMVF1T1hDdDRBOEhLMWNrS3Jj
          d0NnWUlLb1pJemowRUF3SXcKYURFYU1CZ0dBMVVFQXd3UlNXNTBaV3dnVTBkWUlGSnZiM1FnUTBFeEdqQVlCZ05WQkFvTUVVbHV
          kR1ZzSUVOdgpjbkJ2Y21GMGFXOXVNUlF3RWdZRFZRUUhEQXRUWVc1MFlTQkRiR0Z5WVRFTE1Ba0dBMVVFQ0F3Q1EwRXhDekFKCk
          JnTlZCQVlUQWxWVE1CNFhEVEU1TVRBek1URXlNek0wTjFvWERUTTBNVEF6TVRFeU16TTBOMW93Y0RFaU1DQUcKQTFVRUF3d1pTV
          zUwWld3Z1UwZFlJRkJEU3lCUWJHRjBabTl5YlNCRFFURWFNQmdHQTFVRUNnd1JTVzUwWld3ZwpRMjl5Y0c5eVlYUnBiMjR4RkRB
          U0JnTlZCQWNNQzFOaGJuUmhJRU5zWVhKaE1Rc3dDUVlEVlFRSURBSkRRVEVMCk1Ba0dBMVVFQmhNQ1ZWTXdXVEFUQmdjcWhrak9
          QUUlCQmdncWhrak9QUU1CQndOQ0FBUXdwK0xjK1RVQnRnMUgKK1U4SklzTXNiakhqQ2tUdFhiOGpQTTZyMmRodTl6SWJsaERaN0
          lOZnF0M0l4OFhjRktEOGswTkVYcmtaNjZxSgpYYTFLekxJS280Ry9NSUc4TUI4R0ExVWRJd1FZTUJhQUZPbm9SRkpUTmx4TEdKb
          1IvRU1ZTEtYY0lJQklNRllHCkExVWRId1JQTUUwd1M2QkpvRWVHUldoMGRIQnpPaTh2YzJKNExXTmxjblJwWm1sallYUmxjeTUw
          Y25WemRHVmsKYzJWeWRtbGpaWE11YVc1MFpXd3VZMjl0TDBsdWRHVnNVMGRZVW05dmRFTkJMbVJsY2pBZEJnTlZIUTRFRmdRVQp
          XU1BUcDBxb1kxUXVPWEN0NEE4SEsxY2tLcmN3RGdZRFZSMFBBUUgvQkFRREFnRUdNQklHQTFVZEV3RUIvd1FJCk1BWUJBZjhDQV
          FBd0NnWUlLb1pJemowRUF3SURTQUF3UlFJaEFKMXErRlR6K2dVdVZmQlF1Q2dKc0ZyTDJUVFMKZTFhQlo1M081MlRqRmllNkFpQ
          XJpUGFSYWhVWDlPYTlrR0xsQWNoV1hLVDZqNFJXU1I1MEJxaHJOM1VUNEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0t
          LS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDbERDQ0FqbWdBd0lCQWdJVkFPbm9SRkpUTmx4TEdKb1IvRU1ZTEtYY0lJQkl
          NQW9HQ0NxR1NNNDlCQU1DCk1HZ3hHakFZQmdOVkJBTU1FVWx1ZEdWc0lGTkhXQ0JTYjI5MElFTkJNUm93R0FZRFZRUUtEQkZKYm
          5SbGJDQkQKYjNKd2IzSmhkR2x2YmpFVU1CSUdBMVVFQnd3TFUyRnVkR0VnUTJ4aGNtRXhDekFKQmdOVkJBZ01Ba05CTVFzdwpDU
          VlEVlFRR0V3SlZVekFlRncweE9URXdNekV3T1RRNU1qRmFGdzAwT1RFeU16RXlNelU1TlRsYU1HZ3hHakFZCkJnTlZCQU1NRVVs
          dWRHVnNJRk5IV0NCU2IyOTBJRU5CTVJvd0dBWURWUVFLREJGSmJuUmxiQ0JEYjNKd2IzSmgKZEdsdmJqRVVNQklHQTFVRUJ3d0x
          VMkZ1ZEdFZ1EyeGhjbUV4Q3pBSkJnTlZCQWdNQWtOQk1Rc3dDUVlEVlFRRwpFd0pWVXpCWk1CTUdCeXFHU000OUFnRUdDQ3FHU0
          00OUF3RUhBMElBQkUvNkQvMVdITnJXd1BtTk1JeUJLTVc1Cko2SnpNc2pvNnhQMnZrSzFjZFpHYjFQR1JQL0MvOEVDZ2lEa21rb
          G16d0x6TGkrMDAwbTdMTHJ0S0pBM29DMmoKZ2I4d2did3dId1lEVlIwakJCZ3dGb0FVNmVoRVVsTTJYRXNZbWhIOFF4Z3NwZHdn
          Z0Vnd1ZnWURWUjBmQkU4dwpUVEJMb0VtZ1I0WkZhSFIwY0hNNkx5OXpZbmd0WTJWeWRHbG1hV05oZEdWekxuUnlkWE4wWldSelp
          YSjJhV05sCmN5NXBiblJsYkM1amIyMHZTVzUwWld4VFIxaFNiMjkwUTBFdVpHVnlNQjBHQTFVZERnUVdCQlRwNkVSU1V6WmMKU3
          hpYUVmeERHQ3lsM0NDQVNEQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0VnWURWUjBUQVFIL0JBZ3dCZ0VCL3dJQgpBVEFLQmdncWhra
          k9QUVFEQWdOSkFEQkdBaUVBenc5emRVaVVIUE1VZDBDNG14NDFqbEZaa3JNM3k1ZjFsZ25WCk83RmJqT29DSVFDb0d0VW1UNGNY
          dDdWK3lTSGJKOEhvYjlBYW5wdlhOSDFFUisvZ1pGK29wUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
        }
      x-sample-call-output: |-
        {
          "Status": "Success",
          "Message": "SGX ECDSA Quote Verification Successful",
          "ChallengeKeyType": "RSA",
          "ChallengeRsaPublicKey": "-----BEGIN PUBLIC KEY-----\n
            MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtlLCWbh0Nd/KPbPVXlbR\n
            Y47bTv4gHzZZTvDwjSU7iS61+sDSpS106UYnzPIyBtmxVlUV/h6L7F0EEXn4YhHw\n
            1/B1zZTlE0HvTCb1H7LYGaEbmVcnKMr6Y92f+q+gyomazAOJ9YQefK7uyciYuIIb\n
            W9Kz6yGGJr9T5S7/zNqk8iC20NYXirD8xo2MQvviUSLhwYN4dBhroou/0cB3k/4d\n
            hi8FkCFQpBCQlECnFl6238xUfeskByc7xWZhvj67N4M3yvObFxUp5Sv61yHxfB6I\n
            50OXbqsYHPJRc2eqEJWUkOJEKbVqPid5f+kZpwwDmDs8cS95CpgQShFJG+rbL0cX\n
            wwIDAQAB\n
            -----END PUBLIC KEY-----\n",
          "EnclaveIssuer": "cd171c56941c6ce49690b455f691d9c8a04c2e43e0a4d30f752fa5285c7ee57f",
          "EnclaveIssuerProdID": "00",
          "EnclaveIssuerExtProdID": "00000000000000000000000000000000",
          "EnclaveMeasurement": "7df0b7e815bd4b4af41239038d04a740daccf0beb412a2056c8d900b45b621fd",
          "ConfigSvn": "00",
          "IsvSvn": "01",
          "ConfigId": "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
          "TcbLevel": "OutofDate"
        }
responses:
  SGXQVLResponse:
    description: SGXQVLResponse response payload
    schema:
      $ref: '#/definitions/SGXQVLResponse'
  SGXResponse:
    description: SGXResponse response payload
    schema:
      $ref: '#/definitions/SGXResponse'
schemes:
- https
securityDefinitions:
  bearerAuth:
    description: Enter your bearer token in the format **Bearer &lt;token&gt;**
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
