basePath: /sgx-hvs/v1
definitions:
  Host:
    description: Host struct is the database schema of a Host table
    properties:
      connection_string:
        type: string
        x-go-name: ConnectionString
      host_ID:
        type: string
        x-go-name: Id
      host_name:
        type: string
        x-go-name: Name
      uuid:
        type: string
        x-go-name: HardwareUUID
    type: object
    x-go-package: intel/isecl/shvs/v3/types
  HostStatusResponse:
    properties:
      agent_retry_count:
        format: int64
        type: integer
        x-go-name: AgentRetryCount
      host_id:
        type: string
        x-go-name: HostId
      host_status:
        type: string
        x-go-name: Status
      scs_retry_count:
        format: int64
        type: integer
        x-go-name: SCSRetryCount
      tcb_scs_retry_count:
        format: int64
        type: integer
        x-go-name: TCBSCSRetryCount
    type: object
    x-go-package: intel/isecl/shvs/v3/resource
  Hosts:
    items:
      $ref: '#/definitions/Host'
    type: array
    x-go-package: intel/isecl/shvs/v3/types
  NewHostSgxData:
    properties:
      epc_size:
        type: string
        x-go-name: EpcSize
      flc_enabled:
        type: boolean
        x-go-name: FlcEnabled
      host_id:
        type: string
        x-go-name: HostId
      sgx_enabled:
        type: boolean
        x-go-name: SgxEnabled
      sgx_supported:
        type: boolean
        x-go-name: SgxSupported
      tcb_upToDate:
        type: boolean
        x-go-name: TcbUptodate
      validTo:
        format: date-time
        type: string
        x-go-name: ExpiryTime
    type: object
    x-go-package: intel/isecl/shvs/v3/swagger/docs
  NewHostsSgxData:
    items:
      $ref: '#/definitions/NewHostSgxData'
    type: array
    x-go-package: intel/isecl/shvs/v3/swagger/docs
  RegisterHostInfo:
    properties:
      connection_string:
        type: string
        x-go-name: ConnectionString
      description:
        type: string
        x-go-name: Description
      host_ID:
        type: string
        x-go-name: HostId
      host_name:
        type: string
        x-go-name: HostName
      overwrite:
        type: boolean
        x-go-name: Overwrite
      uuid:
        type: string
        x-go-name: UUID
    type: object
    x-go-package: intel/isecl/shvs/v3/resource
  ResponseJson:
    properties:
      Id:
        type: string
      Message:
        type: string
      Status:
        type: string
    type: object
    x-go-package: intel/isecl/shvs/v3/resource
host: sgx-hvs.com:13000
info:
  description: |-
    SGX Host Verification Service (SHVS) retrieves platform-specific details from the registered SGX Agent
    and pushes the data to SGX Caching Service (SCS).
    SGX HVS also exposes API for SGX HUB to get platform-specific values.
    SGX HVS listening port is user-configurable.
  license:
    name: 'Copyright (C) 2020 Intel Corporation. SPDX-License-Identifier: BSD-3-Clause'
  title: SGX-Host-Verification-Service
  version: "1.0"
paths:
  /host-status:
    get:
      description: |
        Retrieves the host status of the host based on the provided filter criteria from the SHVS database.
        A valid bearer token is required to authorize this REST call.
      operationId: hostStateInformation
      parameters:
      - description: Unique ID of the host
        format: uuid
        in: query
        name: hostId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the host status.
          schema:
            $ref: '#/definitions/HostStatusResponse'
      security:
      - bearerAuth: []
      tags:
      - HostStatus
      x-sample-call-endpoint: https://sgx-hvs.com:13000/sgx-hvs/v1/host-status?hostId=58cee2f3-d694-48ba-b8d2-e541544f5e22
      x-sample-call-output: |
        [
            {
                "host_id": "58cee2f3-d694-48ba-b8d2-e541544f5e22",
                "host_status": "CONNECTED",
                "agent_retry_count": 0,
                "scs_retry_count": 0,
                "tcb_scs_retry_count": 0
            }
        ]
  /hosts:
    get:
      description: |
        Retrieves the list of hosts based on the provided filter criteria from the SHVS database.
        A valid bearer token is required to authorize this REST call.
      operationId: queryHosts
      parameters:
      - description: Hardware UUID of the host.
        format: uuid
        in: query
        name: HardwareUUID
        type: string
      - description: Name of the host.
        in: query
        name: HostName
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the hosts.
          schema:
            $ref: '#/definitions/Hosts'
      security:
      - bearerAuth: []
      tags:
      - Host
      x-sample-call-endpoint: https://sgx-hvs.com:13000/sgx-hvs/v1/hosts?HostName=kbshostname
      x-sample-call-output: |
        [
          {
              "host_ID": "d60c9d18-a272-49b9-bf45-872f28407775",
              "host_name": "kbshostname",
              "connection_string": "https://127.0.0.1:11001/sgx_agent/v1/host",
              "uuid": "88888888-8887-1214-0516-3707a5a5a5a5"
          }
        ]
    post:
      consumes:
      - application/json
      description: |
        Registers a new host in the SHVS database. SGX Agent sends the registration request to SHVS along
        with the overwritten flag (In this release the overwrite flag is set to true) and registers the SGX agent’s information to DB.
        If the host is already registered, SHVS will re-register the host if the overwrite flag is true.
        A valid bearer token is required to authorize this REST call.
      operationId: registerHost
      parameters:
      - in: body
        name: request body
        required: true
        schema:
          $ref: '#/definitions/RegisterHostInfo'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully registered the host.
          schema:
            $ref: '#/definitions/ResponseJson'
      security:
      - bearerAuth: []
      tags:
      - Host
      x-sample-call-endpoint: https://sgx-hvs.com:13000/sgx-hvs/v1/hosts
      x-sample-call-input: |
        {
            "host_name": "kbshostname",
            "connection_string": "https://127.0.0.1:11001/sgx_agent/v1/host",
            "description": "Rhel test host",
            "uuid": "88888888-8887-1214-0516-3707a5a5a5a5",
            "overwrite": true
        }
      x-sample-call-output: |
        {
            "Id": "d60c9d18-a272-49b9-bf45-872f28407775",
            "Status": "Created",
            "Message": "SGX Host Registered Successfully"
        }
  /hosts/{id}:
    delete:
      description: |
        Deletes a host associated with the specified host id from the SHVS database.
        A valid bearer token is required to authorize this REST call.
      operationId: deleteHost
      parameters:
      - description: Unique ID of the host.
        format: uuid
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: Successfully deleted the host associated with the specified
            host id.
      security:
      - bearerAuth: []
      tags:
      - Host
      x-sample-call-endpoint: |
        https://sgx-hvs.com:13000/sgx-hvs/v1/hosts/d60c9d18-a272-49b9-bf45-872f28407775
      x-sample-call-output: |
        204 No content
    get:
      description: |
        Retrieves the host details associated with a specified host id from the SHVS database.
        A valid bearer token is required to authorize this REST call.
      operationId: getHosts
      parameters:
      - description: Unique ID of the host.
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the host associated with the specified
            host id.
          schema:
            $ref: '#/definitions/RegisterHostInfo'
      security:
      - bearerAuth: []
      tags:
      - Host
      x-sample-call-endpoint: |
        https://sgx-hvs.com:13000/sgx-hvs/v1/hosts/d60c9d18-a272-49b9-bf45-872f28407775
      x-sample-call-output: |
        {
          "host_ID": "d60c9d18-a272-49b9-bf45-872f28407775",
          "host_name": "kbshostname",
          "connection_string": "https://127.0.0.1:11001/sgx_agent/v1/host",
          "description": "",
          "uuid": "88888888-8887-1214-0516-3707a5a5a5a5",
          "overwrite": false
        }
  /platform-data:
    get:
      description: |
        Retrieves the platform data of the host based on the provided filter criteria from the SHVS database.
        A valid bearer token is required to authorize this REST call.
      operationId: getPlatformData
      parameters:
      - description: Name of the host.
        in: query
        name: HostName
        type: string
      - description: Results returned will be restricted to between the current time
          and number of minutes prior.
        in: query
        name: numberOfMinutes
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the platform data.
          schema:
            $ref: '#/definitions/NewHostsSgxData'
      security:
      - bearerAuth: []
      tags:
      - PlatformData
      x-sample-call-endpoint: https://sgx-hvs.com:13000/sgx-hvs/v1/platform-data?HostName=kbshostname
      x-sample-call-output: |
        [
            {
                "epc_size": "2.0 GB",
                "flc_enabled": true,
                "host_id": "77baebed-5c94-4872-8da9-a754c3c0f4a1",
                "sgx_enabled": true,
                "sgx_supported": true,
                "tcb_upToDate": true,
                "validTo": "2020-07-10T17:20:41Z"
            }
        ]
responses:
  HostStatusResponse:
    description: HostStatusResponse response payload
    schema:
      $ref: '#/definitions/HostStatusResponse'
  Hosts:
    description: Hosts response payload
    schema:
      $ref: '#/definitions/Hosts'
  NewHostsSgxData:
    description: NewHostsSgxData response payload
    schema:
      $ref: '#/definitions/NewHostsSgxData'
  RegisterHostInfo:
    description: RegisterHostInfo response payload
    schema:
      $ref: '#/definitions/RegisterHostInfo'
  ResponseJson:
    description: ResponseJson response payload
    schema:
      $ref: '#/definitions/ResponseJson'
schemes:
- https
securityDefinitions:
  bearerAuth:
    description: Enter your bearer token in the format **Bearer &lt;token&gt;**
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
